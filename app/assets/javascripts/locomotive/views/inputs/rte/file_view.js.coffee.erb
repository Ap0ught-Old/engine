#= require ../../content_assets/picker_view

Locomotive.Views.Inputs.Rte ||= {}

class Locomotive.Views.Inputs.Rte.FileView extends Backbone.View

  opened: false

  initialize: ->
    _.bindAll(@, 'create_picker_view')
    @$link      = $(@el)
    @editor     = @options.editor

  render: ->
    @attach_drawer()

    @show() # debug

  attach_drawer: ->
    command = @editor.toolbar.commandMapping['insertFile:null']
    command.dialog = @

    console.log "[insertFileView] attach_drawer"

  create_picker_view: (container) ->
    console.log '[insertFileView] create_picker_view'

    return if @picker_view?

    @picker_view = new Locomotive.Views.ContentAssets.PickerView(el: container).render()

  show: (state) ->
    console.log "[insertFileView] show #{state}"

    window.application_view.drawer_view.open(@$link.data('url'), @create_picker_view)

    @opened = true

  hide: ->
    window.application_view.drawer_view.close()
    # @picker_view.remove()
    @opened = false

  remove: ->
    @picker_view.remove() if @picker_view?

    super

    # console: destroy view
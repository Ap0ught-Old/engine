- title t('.title', type: @content_type.name.capitalize)

- content_for :actions do
  = link_to t('.new'), new_content_entry_path(@content_type.slug), class: 'btn btn-primary btn-sm'

- if @content_type.filter_fields.present?
  .row
    .col-md-6
      = help @content_type.description
    .col-md-6
      .search-bar
        = form_tag content_entries_path(@content_type.slug), method: :get do
          .form-group
            = text_field_tag :q, params[:q], placeholder: t('.search_placeholder'), class: 'form-control'
            %i.fa.fa-search.icon

- else
  = help @content_type.description

- if @content_type.groupable?
  %p TODO
  / - @content_entries.each do |group|
  /   %h3= group[:name] || t('.category_noname')
  /   = render 'list', content_type: @content_type, entries: group[:entries]
- else
  = render 'list', content_type: @content_type, entries: @content_entries

/ - title t('.title', type: @content_type.name.capitalize)

/ - content_for :actions do
/   = render 'locomotive/shared/actions/contents'

/ - # Note: submenu has to be here in order to have the previous entries correctly rendered since we do not return
/ - #       all the attributes of the content types in the following code (causing stale documents)
/ - content_for :submenu do
/   = render 'locomotive/shared/menu/contents'

/ - if can?(:manage, Locomotive::ContentType)
/   #local-actions-bottom-bar
/     %p.tleft
/       = link_to t('.destroy'), content_type_path(@content_type), data: { confirm: t('locomotive.messages.confirm') }, method: :delete, class: 'button remove'
